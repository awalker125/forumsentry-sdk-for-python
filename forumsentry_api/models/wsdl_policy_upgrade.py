# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

forumsentry_api/models.JSONArray  # noqa: F401,E501


class WsdlPolicyUpgrade(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'port_information': 'JSONArray',
        'wsdl_library': 'str',
        'description': 'str',
        'wsdl_port_name': 'str',
        'wsdl_binding_name': 'str',
        'wsdl_port_type_name': 'str',
        'wsdl_definition_name': 'str',
        'operations': 'list[str]',
        'user_name': 'str',
        'password': 'str',
        'wsdl_namespace': 'str',
        'wsdl_source': 'str',
        'wsdl_service_name': 'str',
        'wsdl_url': 'str',
        'name': 'str'
    }

    attribute_map = {
        'port_information': 'portInformation',
        'wsdl_library': 'wsdlLibrary',
        'description': 'description',
        'wsdl_port_name': 'wsdlPortName',
        'wsdl_binding_name': 'wsdlBindingName',
        'wsdl_port_type_name': 'wsdlPortTypeName',
        'wsdl_definition_name': 'wsdlDefinitionName',
        'operations': 'operations',
        'user_name': 'userName',
        'password': 'password',
        'wsdl_namespace': 'wsdlNamespace',
        'wsdl_source': 'wsdlSource',
        'wsdl_service_name': 'wsdlServiceName',
        'wsdl_url': 'wsdlUrl',
        'name': 'name'
    }

    def __init__(self, port_information=None, wsdl_library=None, description=None, wsdl_port_name=None, wsdl_binding_name=None, wsdl_port_type_name=None, wsdl_definition_name=None, operations=None, user_name=None, password=None, wsdl_namespace=None, wsdl_source=None, wsdl_service_name=None, wsdl_url=None, name=None):  # noqa: E501
        """WsdlPolicyUpgrade - a model defined in Swagger"""  # noqa: E501

        self._port_information = None
        self._wsdl_library = None
        self._description = None
        self._wsdl_port_name = None
        self._wsdl_binding_name = None
        self._wsdl_port_type_name = None
        self._wsdl_definition_name = None
        self._operations = None
        self._user_name = None
        self._password = None
        self._wsdl_namespace = None
        self._wsdl_source = None
        self._wsdl_service_name = None
        self._wsdl_url = None
        self._name = None
        self.discriminator = None

        if port_information is not None:
            self.port_information = port_information
        if wsdl_library is not None:
            self.wsdl_library = wsdl_library
        if description is not None:
            self.description = description
        if wsdl_port_name is not None:
            self.wsdl_port_name = wsdl_port_name
        if wsdl_binding_name is not None:
            self.wsdl_binding_name = wsdl_binding_name
        if wsdl_port_type_name is not None:
            self.wsdl_port_type_name = wsdl_port_type_name
        if wsdl_definition_name is not None:
            self.wsdl_definition_name = wsdl_definition_name
        if operations is not None:
            self.operations = operations
        if user_name is not None:
            self.user_name = user_name
        if password is not None:
            self.password = password
        if wsdl_namespace is not None:
            self.wsdl_namespace = wsdl_namespace
        self.wsdl_source = wsdl_source
        if wsdl_service_name is not None:
            self.wsdl_service_name = wsdl_service_name
        if wsdl_url is not None:
            self.wsdl_url = wsdl_url
        if name is not None:
            self.name = name

    @property
    def port_information(self):
        """Gets the port_information of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The port_information of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: JSONArray
        """
        return self._port_information

    @port_information.setter
    def port_information(self, port_information):
        """Sets the port_information of this WsdlPolicyUpgrade.


        :param port_information: The port_information of this WsdlPolicyUpgrade.  # noqa: E501
        :type: JSONArray
        """

        self._port_information = port_information

    @property
    def wsdl_library(self):
        """Gets the wsdl_library of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The wsdl_library of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: str
        """
        return self._wsdl_library

    @wsdl_library.setter
    def wsdl_library(self, wsdl_library):
        """Sets the wsdl_library of this WsdlPolicyUpgrade.


        :param wsdl_library: The wsdl_library of this WsdlPolicyUpgrade.  # noqa: E501
        :type: str
        """

        self._wsdl_library = wsdl_library

    @property
    def description(self):
        """Gets the description of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The description of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this WsdlPolicyUpgrade.


        :param description: The description of this WsdlPolicyUpgrade.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def wsdl_port_name(self):
        """Gets the wsdl_port_name of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The wsdl_port_name of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: str
        """
        return self._wsdl_port_name

    @wsdl_port_name.setter
    def wsdl_port_name(self, wsdl_port_name):
        """Sets the wsdl_port_name of this WsdlPolicyUpgrade.


        :param wsdl_port_name: The wsdl_port_name of this WsdlPolicyUpgrade.  # noqa: E501
        :type: str
        """

        self._wsdl_port_name = wsdl_port_name

    @property
    def wsdl_binding_name(self):
        """Gets the wsdl_binding_name of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The wsdl_binding_name of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: str
        """
        return self._wsdl_binding_name

    @wsdl_binding_name.setter
    def wsdl_binding_name(self, wsdl_binding_name):
        """Sets the wsdl_binding_name of this WsdlPolicyUpgrade.


        :param wsdl_binding_name: The wsdl_binding_name of this WsdlPolicyUpgrade.  # noqa: E501
        :type: str
        """

        self._wsdl_binding_name = wsdl_binding_name

    @property
    def wsdl_port_type_name(self):
        """Gets the wsdl_port_type_name of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The wsdl_port_type_name of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: str
        """
        return self._wsdl_port_type_name

    @wsdl_port_type_name.setter
    def wsdl_port_type_name(self, wsdl_port_type_name):
        """Sets the wsdl_port_type_name of this WsdlPolicyUpgrade.


        :param wsdl_port_type_name: The wsdl_port_type_name of this WsdlPolicyUpgrade.  # noqa: E501
        :type: str
        """

        self._wsdl_port_type_name = wsdl_port_type_name

    @property
    def wsdl_definition_name(self):
        """Gets the wsdl_definition_name of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The wsdl_definition_name of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: str
        """
        return self._wsdl_definition_name

    @wsdl_definition_name.setter
    def wsdl_definition_name(self, wsdl_definition_name):
        """Sets the wsdl_definition_name of this WsdlPolicyUpgrade.


        :param wsdl_definition_name: The wsdl_definition_name of this WsdlPolicyUpgrade.  # noqa: E501
        :type: str
        """

        self._wsdl_definition_name = wsdl_definition_name

    @property
    def operations(self):
        """Gets the operations of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The operations of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: list[str]
        """
        return self._operations

    @operations.setter
    def operations(self, operations):
        """Sets the operations of this WsdlPolicyUpgrade.


        :param operations: The operations of this WsdlPolicyUpgrade.  # noqa: E501
        :type: list[str]
        """

        self._operations = operations

    @property
    def user_name(self):
        """Gets the user_name of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The user_name of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this WsdlPolicyUpgrade.


        :param user_name: The user_name of this WsdlPolicyUpgrade.  # noqa: E501
        :type: str
        """

        self._user_name = user_name

    @property
    def password(self):
        """Gets the password of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The password of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this WsdlPolicyUpgrade.


        :param password: The password of this WsdlPolicyUpgrade.  # noqa: E501
        :type: str
        """

        self._password = password

    @property
    def wsdl_namespace(self):
        """Gets the wsdl_namespace of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The wsdl_namespace of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: str
        """
        return self._wsdl_namespace

    @wsdl_namespace.setter
    def wsdl_namespace(self, wsdl_namespace):
        """Sets the wsdl_namespace of this WsdlPolicyUpgrade.


        :param wsdl_namespace: The wsdl_namespace of this WsdlPolicyUpgrade.  # noqa: E501
        :type: str
        """

        self._wsdl_namespace = wsdl_namespace

    @property
    def wsdl_source(self):
        """Gets the wsdl_source of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The wsdl_source of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: str
        """
        return self._wsdl_source

    @wsdl_source.setter
    def wsdl_source(self, wsdl_source):
        """Sets the wsdl_source of this WsdlPolicyUpgrade.


        :param wsdl_source: The wsdl_source of this WsdlPolicyUpgrade.  # noqa: E501
        :type: str
        """
        if wsdl_source is None:
            raise ValueError("Invalid value for `wsdl_source`, must not be `None`")  # noqa: E501
        allowed_values = ["URL", "WSDL Library"]  # noqa: E501
        if wsdl_source not in allowed_values:
            raise ValueError(
                "Invalid value for `wsdl_source` ({0}), must be one of {1}"  # noqa: E501
                .format(wsdl_source, allowed_values)
            )

        self._wsdl_source = wsdl_source

    @property
    def wsdl_service_name(self):
        """Gets the wsdl_service_name of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The wsdl_service_name of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: str
        """
        return self._wsdl_service_name

    @wsdl_service_name.setter
    def wsdl_service_name(self, wsdl_service_name):
        """Sets the wsdl_service_name of this WsdlPolicyUpgrade.


        :param wsdl_service_name: The wsdl_service_name of this WsdlPolicyUpgrade.  # noqa: E501
        :type: str
        """

        self._wsdl_service_name = wsdl_service_name

    @property
    def wsdl_url(self):
        """Gets the wsdl_url of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The wsdl_url of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: str
        """
        return self._wsdl_url

    @wsdl_url.setter
    def wsdl_url(self, wsdl_url):
        """Sets the wsdl_url of this WsdlPolicyUpgrade.


        :param wsdl_url: The wsdl_url of this WsdlPolicyUpgrade.  # noqa: E501
        :type: str
        """

        self._wsdl_url = wsdl_url

    @property
    def name(self):
        """Gets the name of this WsdlPolicyUpgrade.  # noqa: E501


        :return: The name of this WsdlPolicyUpgrade.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WsdlPolicyUpgrade.


        :param name: The name of this WsdlPolicyUpgrade.  # noqa: E501
        :type: str
        """

        self._name = name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WsdlPolicyUpgrade):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
